<UserControl x:Class="MeowType.NetDebug.Tab"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MeowType.NetDebug"
             xmlns:dragablz="http://dragablz.net/winfx/xaml/dragablz"
             xmlns:dockablz="http://dragablz.net/winfx/xaml/dockablz"
             mc:Ignorable="d" Name="self"
             d:DesignHeight="30" d:DesignWidth="200" MinWidth="50" MaxWidth="200">
    <UserControl.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#00DDDDDD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#AADDDDDD"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#CCDDDDDD"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="local:Tab">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="local:Tab">
                        <Grid Margin="-1 0 0 0">
                            <local:TabBg x:Name="tab_bg">
                                <local:TabBg.Style>
                                    <Style TargetType="local:TabBg">
                                        <Setter Property="Opacity" Value="1"></Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsSelected, ElementName=self}" Value="False">
                                                <Setter Property="Opacity" Value="0"></Setter>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsHover, ElementName=self}" Value="True">
                                                <Setter Property="Opacity" Value="0.1"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </local:TabBg.Style>
                            </local:TabBg>

                            <Border Height="10" Width="1" Background="#77FFFFFF" HorizontalAlignment="Left" Panel.ZIndex="-1"></Border>
                            <Border Height="10" Width="1" Background="#77FFFFFF" HorizontalAlignment="Right" Panel.ZIndex="-1"></Border>

                            <Grid WindowChrome.IsHitTestVisibleInChrome="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                    <ColumnDefinition Width="15"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Label Name="TabContent" Padding="5,0" Margin="5,0,15,0" VerticalAlignment="Center">
                                    <Label.Effect>
                                        <DropShadowEffect ShadowDepth="0" BlurRadius="5" Opacity="0.5"/>
                                    </Label.Effect>
                                    <Label.Style>
                                        <Style TargetType="Label">
                                            <Setter Property="Foreground" Value="#FFFCFCFC"></Setter>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsSelected, ElementName=self}" Value="True">
                                                    <Setter Property="Foreground" Value="#FF454545"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Label.Style>
                                    <ContentPresenter></ContentPresenter>
                                </Label>
                                <Button Command="{x:Static dragablz:TabablzControl.CloseItemCommand}" Grid.Column="1" Height="15" Width="15" BorderThickness="0" Padding="0" Margin="-15,0,0,0" Click="Close_Click" Style="{DynamicResource CloseButtonStyle}">
                                    <Button.OpacityMask>
                                        <VisualBrush>
                                            <VisualBrush.Visual>
                                                <Ellipse Fill="White" Width="15" Height="15" />
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </Button.OpacityMask>
                                    <Button.Content>
                                        <Grid ClipToBounds="True">
                                            <Label FontSize="10" Padding="0" Margin="0" RenderTransformOrigin="0.5,0.5" Foreground="#FF787878">
                                                <Label.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
                                                        <SkewTransform/>
                                                        <RotateTransform/>
                                                        <TranslateTransform/>
                                                    </TransformGroup>
                                                </Label.RenderTransform> ×
                                            </Label>
                                        </Grid>
                                    </Button.Content>
                                </Button>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
</UserControl>
